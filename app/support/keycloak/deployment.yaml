---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-pvc
  namespace: ${NAMESPACE}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-server
  namespace: ${NAMESPACE}
  labels:
    app: keycloak-server-api
spec:
  selector:
    matchLabels:
      app: keycloak-server-api
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: keycloak-server-api
    spec:
      imagePullSecrets:
        - name: pipeline-docker-registry
      containers:
      - name: keycloak-server
        image: ${CONTAINER_IMAGE}
        env:
        - name: KEYCLOAK_ADMIN # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KEYCLOAK_ADMIN # The key to fetch.

        - name: KEYCLOAK_ADMIN_PASSWORD # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KEYCLOAK_ADMIN_PASSWORD # The key to fetch.

        - name: KC_DB # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KC_DB # The key to fetch.

        - name: KC_DB_SCHEMA # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KC_DB_SCHEMA # The key to fetch.

        - name: KC_DB_URL # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KC_DB_URL # The key to fetch.

        - name: KC_DB_USERNAME # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KC_DB_USERNAME # The key to fetch.

        - name: KC_DB_PASSWORD # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KC_DB_PASSWORD # The key to fetch.

        - name: KEYCLOAK_IMPORT # Notice that the case is different here
          valueFrom:
            configMapKeyRef:
              name: keycloak        # The ConfigMap this value comes from.
              key: KEYCLOAK_IMPORT # The key to fetch.

        ports:
          - name: http-port
            containerPort: 8080
        volumeMounts:
          - name: keycloak-vol
            mountPath: /var/lib/keycloak
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: keycloak-vol
        persistentVolumeClaim:
          claimName: keycloak-pvc
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-server-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: keycloak-server-api
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ${NAMESPACE}
  name: keycloak-server-ingress
  annotations:
    allow.http: "true"
spec:
  rules:
    - host: ${DNS}
      http:
        paths:
          - path: /
            backend:
              serviceName: keycloak-server-service
              servicePort: 80